<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdjf.dao.product.productBuyIncome">
<select id="selectProductBuyIncomePage" resultType="com.zdjf.domain.product.ProductBuyIncomeVo">
		<trim prefix="select" suffixOverrides=",">
		<include refid="columns"/>
		</trim> 
		from
		zd_product_buy_income
		where 1=1
		<include refid="conds" />
		order by id desc
		limit #{firstrownum}, #{limit}
	</select>
	<select id="selectProductBuyIncomeCount" resultType="java.lang.Long">
		select
		count(id)
		from zd_product_buy_income
		where 1=1
		<include refid="conds" />
	</select>
	<select id="selectProductBuyIncomeBuyById" resultType="com.zdjf.domain.product.ProductBuyIncome">
		<trim prefix="select" suffixOverrides=",">
		<include refid="columns"/>
		</trim> 
		from zd_product_buy_income
		where 1=1
		and id=#{id}
	</select>
	<select id="deleteProductBuyIncomeById" parameterType="long">
			delete from zd_product_buy_income where id=#{id}
	</select>
	<select id="updateProductBuyIncomeById" parameterType="com.zdjf.domain.product.ProductBuyIncome">
		update zd_product_buy_income
		<trim prefix="set" suffixOverrides=",">
		<if test="id != null and id != ''">   id = #{id},</if>
		<if test="buy_id != null and buy_id != ''">   buy_id = #{buy_id},</if>
		<if test="product_id != null and product_id != ''">   product_id = #{product_id},</if>
		<if test="num != null and num != ''">   num = #{num},</if>
		<if test="start_date != null">   start_date = #{start_date},</if>
		<if test="end_date != null">   end_date = #{end_date},</if>
		<if test="days != null and days != ''">   days = #{days},</if>
		<if test="is_return_amount != null and is_return_amount != ''">   is_return_amount = #{is_return_amount},</if>
		<if test="amount != null and amount != ''">   amount = #{amount},</if>
		<if test="interest != null and interest != ''">   interest = #{interest},</if>
		<if test="income != null and income != ''">   income = #{income},</if>
		<if test="pay_date != null">   pay_date = #{pay_date},</if>
		<if test="act_pay_time != null and act_pay_time != ''">   act_pay_time = #{act_pay_time},</if>
		<if test="status != null and status != ''">   status = #{status},</if>
		<if test="create_time != null">   create_time = #{create_time},</if>
		<if test="remark != null and remark != ''">   remark = #{remark},</if>
		<if test="income_id != null and income_id != ''">   income_id = #{income_id},</if>
		<if test="old_buy_id != null and old_buy_id != ''">   old_buy_id = #{old_buy_id},</if>
		<if test="old_product_id != null and old_product_id != ''">   old_product_id = #{old_product_id},</if>
		<if test="user_id != null and user_id != ''">   user_id = #{user_id},</if>
		</trim>
		where 1=1
		and id=#{id}
	</select>
	<select id="selectPayDate" resultType="java.util.Map">
		select 
		distinct pay_date,status
		from zd_product_buy_income
		where 
		1=1
		and user_id=#{user_id}
		and status in (1,-1)
	</select>
	<select id="selectPayReturnTotal" resultType="java.util.Map">
		select 
		COUNT(distinct pbi.product_id) product_num,product_id,SUM(pbi.amount) total_amount,sum(pbi.income) total_income
		from zd_product_buy_income pbi
		where 
		1=1
		and pbi.status in (1,-1)
		and pbi.user_id=#{user_id}
		and DATE_FORMAT(pbi.pay_date,'%Y-%u')=DATE_FORMAT(#{returnDate},'%Y-%u')
		group by DATE_FORMAT(pbi.pay_date,'%Y-%u'),pbi.product_id
	</select>
	<select id="selectPayReturn" resultType="com.zdjf.domain.product.ProductBuyIncomeVo">
		select 
		*
		from zd_product_buy_income pbi
		where 
		1=1
		and pbi.status in (1,-1)
		and user_id=#{user_id}
		and DATE_FORMAT(pbi.pay_date,'%Y-%m')=#{returnDate}
		order by pay_date
	</select>
	<select id="selectUserMonthIncomeList" resultType="com.zdjf.domain.product.ProductBuyIncomeVo" parameterType="java.util.Map">
		select * from zd_product_buy_income where (status=1 or status=-1) and end_date &gt;= #{beginDate} and end_date &lt;= #{endDate}
		and user_id=#{user_id} group by end_date,status order by create_time asc
	</select>
	
	<select id="selectUserBuyIncomeByYear" resultType="map">
		select sum(amount+income) incomed,DATE_FORMAT( end_date, '%Y-%m') date from zd_product_buy_income 
		where (status=1 or status=-1) and user_id=#{user_id} and end_date &gt;= #{beginDate} and end_date &lt; #{endDate} 
		group by date order by date asc 
	</select>
	
	<select id="selectProductBuyIncomeEnd" resultType="com.zdjf.domain.product.ProductBuyIncome" parameterType="java.util.Map">
		select * 
		from zd_product_buy_income
		where 1=1
		<if test="product_id != null"  >
		and product_id=#{product_id}
		</if>
		<if test="user_id != null"  >
		and user_id=#{user_id}
		</if>
		<if test="status != null"  >
		and status=#{status}
		</if>
		<if test="end_dates != null"  >
			and DATE_FORMAT(end_date,'%Y-%m-%d') = #{end_dates}
		</if>
	</select>
	<select id="selectInterestPage" resultType="java.util.Map">
		select
		*
		from
		zd_product_buy_income
		where 1=1
		<if test="user_id !=null and user_id !=''">
		and user_id=#{user_id}
		</if>
		<if test="product_id !=null and product_id !=''">
		and product_id in #{user_id}
		</if>
		<if test="payStartDate !=null and payStartDate !=''">
		and DATE_FORMAT(pay_date,'%Y-%m-%d')&gt;=#{payStartDate}
		</if>
		<if test="payEndDate !=null and payEndDate !=''">
		and DATE_FORMAT(pay_date,'%Y-%m-%d')&lt;=#{payEndDate}
		</if>
		<if test="status !=null and status !=''">
		and status=#{status}
		</if>
		<if test="isReturnAmount !=null and isReturnAmount !=''">
		and is_return_amount=#{isReturnAmount}
		</if>
		order by id desc
		limit #{firstrownum}, #{limit}
	</select>
	<select id="selectInterestCount" resultType="java.lang.Long">
		select
		count(id)
		from zd_product_buy_income
		where 1=1
		<include refid="conds" />
	</select>
	<select id="selectPbiMap" resultType="com.zdjf.domain.product.ProductBuyIncome">
		select
		*
		from zd_product_buy_income
		where 1=1
		and product_id=#{product_id}
		and DATE_FORMAT(pay_date,'%Y-%m-%d')=#{pay_date}
		<if test="status !=null and status !=''">
		and status=#{status}
		</if>
	</select>

	<!--按条件查询用户当月收益-->
	<select id="queryUserIncomeByMonth" resultType="java.lang.Double" parameterType="java.util.Map">
		SELECT SUM(IFNULL(amount, 0)+income)
		from zd_product_buy_income
		where user_id = #{userId}
		and DATE_FORMAT(end_date,'%Y-%m')=DATE_FORMAT(#{qryDate},'%Y-%m')
		<choose>
			<when test="status !=null and status!=''">
				and status=#{status}
			</when>
			<otherwise>
				and status in (1,-1)
			</otherwise>
		</choose>
	</select>

	<!--按条件查询用户回款记录-->
	<select id="queryUserIncomeList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
		b.product_name prdName,
		t.product_type prdType,
		DATE_FORMAT(b.pay_time,'%Y-%m-%d') payTime,
		b.amount intAmt,
		DATE_FORMAT(e.end_date,'%Y-%m-%d') refundDate,
		IFNULL(e.amount, 0) amt,
		e.income income,
		(IFNULL(e.amount, 0) + e.income) totalAmt,
		e.status status
		FROM zd_product_buy_income e
		INNER JOIN zd_product_buy b ON e.buy_id = b.id
		INNER JOIN zd_product t ON e.product_id = t.id
		WHERE e.user_id = #{userId}
		<if test="qryDate != null">
			AND DATE_FORMAT(e.end_date,'%Y-%m-%d')=DATE_FORMAT(#{qryDate},'%Y-%m-%d')
		</if>
		<choose>
			<when test="status !=null and status!=''">
				AND e.status=#{status}
			</when>
			<otherwise>
				AND e.status in (1,-1)
			</otherwise>
		</choose>
		<if test="ordType == 1">
			ORDER BY b.pay_time ASC
		</if>
		<if test="ordType == 2">
			ORDER BY e.end_date ASC
		</if>
		<if test="limit != null and limit != ''">
			limit #{firstrownum}, #{limit}
		</if>
	</select>

	<select id="queryUserIncomeListCount" resultType="java.lang.Long">
		SELECT
		count(1)
		FROM zd_product_buy_income e
		INNER JOIN zd_product_buy b ON e.buy_id = b.id
		WHERE e.user_id = #{userId}
		<if test="qryDate != null">
			AND DATE_FORMAT(e.end_date,'%Y-%m-%d')=DATE_FORMAT(#{qryDate},'%Y-%m-%d')
		</if>
		<choose>
			<when test="status !=null and status!=''">
				AND e.status=#{status}
			</when>
			<otherwise>
				AND e.status in (1,-1)
			</otherwise>
		</choose>
	</select>
</mapper>